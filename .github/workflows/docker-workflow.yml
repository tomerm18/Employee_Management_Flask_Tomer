name: Docker Build and Push

on:
  push:
    branches:
      - main
    # paths-ignore:
    #   - 'terraform/**'
  pull_request:
    branches:
      - main
    # paths-ignore:
    #   - 'terraform/**'
  # repository_dispatch:
  #   types: [docker-update]
jobs:
  docker:
    runs-on: ubuntu-latest
    outputs:
      NEW_VERSION: ${{ steps.version.outputs.NEW_VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate new version
        id: version
        run: |
          NEW_VERSION=$(date +%Y%m%d%H%M%S)
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update app_version in terraform.tfvars
        run: |
          sed -i 's/app_version = "[^"]*"/app_version = "${{ steps.version.outputs.NEW_VERSION }}"/' terraform/terraform.tfvars

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: tomer8/employee_management_flask_test:${{ steps.version.outputs.NEW_VERSION }}

      - name: Commit and push if changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add terraform/terraform.tfvars
          git commit -m "Update app_version to ${{ steps.version.outputs.NEW_VERSION }}" || exit 0
          git push


  trigger_terraform:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Terraform workflow
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: docker-update
          client-payload: '{"app_version": "${{ needs.docker.outputs.NEW_VERSION }}"}'