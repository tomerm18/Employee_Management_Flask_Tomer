name: Terraform Apply

on:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'terraform/**'
  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #     - 'terraform/**'
  repository_dispatch:
    types: [docker-update]

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
      AWS_REGION: ${{ secrets.BACKEND_REGION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Create backend.tf
        run: |
          cat <<EOF > backend.tf
          terraform {
            backend "s3" {
              bucket = "${{ secrets.BUCKET_TF_STATE }}"
              key    = "terraform/python-master-project.tfstate"
              region = "${{ secrets.BACKEND_REGION }}"
            }
          }
          EOF

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'repository_dispatch')
        run: terraform apply -auto-approve tfplan

    #   - name: Terraform Destroy
    #     if: github.ref == 'refs/heads/main' && github.event_name == 'repository_dispatch'
    #     run: terraform destroy -auto-approve